<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib">

	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="2" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#CCC" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#CCC" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#EEE" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#EEE" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#AAA" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#BBB" Offset="0.0"/>
				<GradientStop Color="#EEE" Offset="0.1"/>
				<GradientStop Color="#EEE" Offset="0.9"/>
				<GradientStop Color="#FFF" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

	<SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

	<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

	<!-- Border Brushes -->

	<LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#CCC" Offset="0.0"/>
				<GradientStop Color="#444" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#CCC" Offset="0.0"/>
				<GradientStop Color="#444" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#777" Offset="0.0"/>
				<GradientStop Color="#000" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#444" Offset="0.0"/>
				<GradientStop Color="#888" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

	<SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

	<SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

	<!-- Miscellaneous Brushes -->
	<SolidColorBrush x:Key="GlyphBrush" Color="#444" />

	<SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />


	<Style TargetType="Button">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="MinHeight" Value="23"/>
		<Setter Property="MinWidth" Value="75"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border" CornerRadius="2" BorderThickness="1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}">
						<ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="TextBoxDataEntryTemplate" TargetType="TextBoxBase"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib">
		<Border BorderThickness="1,1,1,1" Padding="1,1,1,1" CornerRadius="2,2,2,2" BorderBrush="#FF888888" Background="#FFFFFFFF" Name="Border">
			<ScrollViewer Name="PART_ContentHost" Margin="0,0,0,0" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="Panel.Background" TargetName="Border">
					<Setter.Value>
						<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="Border">
					<Setter.Value>
						<SolidColorBrush>LightGray</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="TextElement.Foreground">
					<Setter.Value>
						<SolidColorBrush>#FF000000</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>False</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="Panel.Background" TargetName="Border">
					<Setter.Value>
						<SolidColorBrush>#FFFFFFFF</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="Border">
					<Setter.Value>
						<SolidColorBrush>LightGray</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="TextElement.Foreground">
					<Setter.Value>
						<SolidColorBrush>#FF000000</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="LoginTabControlTemplate" TargetType="TabControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
		<Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Name="ColumnDefinition0" />
				<ColumnDefinition Width="0" Name="ColumnDefinition1" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" Name="RowDefinition0" />
				<RowDefinition Height="*" Name="RowDefinition1" />
			</Grid.RowDefinitions>
			<TabPanel IsItemsHost="True" Name="HeaderPanel" Margin="2,2,2,0" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" />
			<Border BorderThickness="0,0,1,1" BorderBrush="#FFD0CEBF" Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
				<Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}">
					<Border Background="{TemplateBinding Panel.Background}">
						<ContentPresenter Content="{TemplateBinding TabControl.SelectedContent}" ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}" ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" ContentSource="SelectedContent" Name="PART_SelectedContentHost" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
					</Border>
				</Border>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="TabControl.TabStripPlacement">
				<Setter Property="Grid.Row" TargetName="HeaderPanel">
					<Setter.Value>
						<s:Int32>1</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Grid.Row" TargetName="ContentPanel">
					<Setter.Value>
						<s:Int32>0</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
					<Setter.Value>
						<GridLength>*</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
					<Setter.Value>
						<GridLength>Auto</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
					<Setter.Value>
						<Thickness>2,0,2,2</Thickness>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
							<LinearGradientBrush.GradientStops>
								<GradientStop Color="#FFFCFCFE" Offset="0" />
								<GradientStop Color="#FFF4F3EE" Offset="1" />
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Bottom" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabControl.TabStripPlacement">
				<Setter Property="Grid.Row" TargetName="HeaderPanel">
					<Setter.Value>
						<s:Int32>0</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Grid.Row" TargetName="ContentPanel">
					<Setter.Value>
						<s:Int32>0</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Grid.Column" TargetName="HeaderPanel">
					<Setter.Value>
						<s:Int32>0</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Grid.Column" TargetName="ContentPanel">
					<Setter.Value>
						<s:Int32>1</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
					<Setter.Value>
						<GridLength>Auto</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
					<Setter.Value>
						<GridLength>*</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
					<Setter.Value>
						<GridLength>*</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
					<Setter.Value>
						<GridLength>0</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
					<Setter.Value>
						<Thickness>2,2,-1,2</Thickness>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
							<LinearGradientBrush.GradientStops>
								<GradientStop Color="#FFFCFCFE" Offset="0" />
								<GradientStop Color="#FFF4F3EE" Offset="1" />
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Left" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabControl.TabStripPlacement">
				<Setter Property="Grid.Row" TargetName="HeaderPanel">
					<Setter.Value>
						<s:Int32>0</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Grid.Row" TargetName="ContentPanel">
					<Setter.Value>
						<s:Int32>0</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Grid.Column" TargetName="HeaderPanel">
					<Setter.Value>
						<s:Int32>1</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Grid.Column" TargetName="ContentPanel">
					<Setter.Value>
						<s:Int32>0</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
					<Setter.Value>
						<GridLength>*</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
					<Setter.Value>
						<GridLength>Auto</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
					<Setter.Value>
						<GridLength>*</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
					<Setter.Value>
						<GridLength>0</GridLength>
					</Setter.Value>
				</Setter>
				<Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
					<Setter.Value>
						<Thickness>-1,2,2,2</Thickness>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background">
					<Setter.Value>
						<LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
							<LinearGradientBrush.GradientStops>
								<GradientStop Color="#FFFCFCFE" Offset="0" />
								<GradientStop Color="#FFF4F3EE" Offset="1" />
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Right" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="TextElement.Foreground">
					<Setter.Value>
						<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>False</s:Boolean>
				</Trigger.Value>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="TabItemTemplateNormal" TargetType="TabItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
		<Border SnapsToDevicePixels="True">
			<Grid Margin="0,0,1,0">
				<Grid Name="Transform">
					<Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,0,0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" />
					<Border BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Name="HighlightBorder" Height="3" VerticalAlignment="Top" />
				</Grid>
				<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
					<ContentPresenter RecognizesAccessKey="True" 
                                      Content="{TemplateBinding HeaderedContentControl.Header}" 
                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                      ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
                                      ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                      Width="30" Height="50"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
					</ContentPresenter>
				</Border>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver">
				<Setter Property="Border.BorderBrush" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFFCFCFE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFFCFCFE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
							<LinearGradientBrush.GradientStops>
								<GradientStop Color="#FFFCFCFE" Offset="0" />
								<GradientStop Color="#FFECEBE6" Offset="1" />
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="Selector.IsSelected">
				<Setter Property="Panel.ZIndex">
					<Setter.Value>
						<s:Int32>1</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFE68B2C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFFCFCFE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFFCFCFE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<ScaleTransform ScaleX="1" ScaleY="-1" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Bottom" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<RotateTransform Angle="-90" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Left" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<RotateTransform Angle="90" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Right" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="TextElement.Foreground">
					<Setter.Value>
						<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFFCFCFE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFC9C7BA</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>False</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-2,-1</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-2,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-1,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-1,-2,-2,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="TabItemTemplateHeaderRotated" TargetType="TabItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
		<Border SnapsToDevicePixels="True">
			<Grid Margin="0,0,1,0">
				<Grid Name="Transform">
					<Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,0,0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" />
					<Border BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Name="HighlightBorder" Height="3" VerticalAlignment="Top" />
				</Grid>
				<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
					<ContentPresenter RecognizesAccessKey="True" 
                                      Content="{TemplateBinding HeaderedContentControl.Header}" 
                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                      ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
                                      ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                      Width="150" Height="30"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
						<ContentPresenter.LayoutTransform>
							<TransformGroup>
								<RotateTransform Angle="-90"/>
							</TransformGroup>
						</ContentPresenter.LayoutTransform>
					</ContentPresenter>
				</Border>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver">
				<Setter Property="Border.BorderBrush" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFE68B2C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFFFC73C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
							<LinearGradientBrush.GradientStops>
								<GradientStop Color="#FFFFFFFF" Offset="0" />
								<GradientStop Color="#FFECEBE6" Offset="1" />
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="Selector.IsSelected">
				<Setter Property="Panel.ZIndex">
					<Setter.Value>
						<s:Int32>1</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFE68B2C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFFFC73C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFFCFCFE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<ScaleTransform ScaleX="1" ScaleY="-1" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Bottom" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<RotateTransform Angle="-90" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Left" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<RotateTransform Angle="90" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Right" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="TextElement.Foreground">
					<Setter.Value>
						<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFF5F4EA</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFC9C7BA</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>False</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-2,-1</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-2,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-1,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-1,-2,-2,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="TabItemTemplateWideHeader" TargetType="TabItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
		<Border SnapsToDevicePixels="True">
			<Grid Margin="0,0,1,0">
				<Grid Name="Transform">
					<Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,0,0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" />
					<Border BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Name="HighlightBorder" Height="3" VerticalAlignment="Top" />
				</Grid>
				<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
					<ContentPresenter RecognizesAccessKey="True" 
                                      Content="{TemplateBinding HeaderedContentControl.Header}" 
                                      ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
                                      ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
                                      ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                      Width="150" Height="30"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
					</ContentPresenter>
				</Border>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver">
				<Setter Property="Border.BorderBrush" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFE68B2C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFFFC73C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
							<LinearGradientBrush.GradientStops>
								<GradientStop Color="#FFFFFFFF" Offset="0" />
								<GradientStop Color="#FFECEBE6" Offset="1" />
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="Selector.IsSelected">
				<Setter Property="Panel.ZIndex">
					<Setter.Value>
						<s:Int32>1</s:Int32>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFE68B2C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="HighlightBorder">
					<Setter.Value>
						<SolidColorBrush>#FFFFC73C</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFFCFCFE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<ScaleTransform ScaleX="1" ScaleY="-1" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Bottom" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<RotateTransform Angle="-90" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Left" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="TabItem.TabStripPlacement">
				<Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
					<Setter.Value>
						<RotateTransform Angle="90" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<x:Static Member="Dock.Right" />
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="TextElement.Foreground">
					<Setter.Value>
						<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
					</Setter.Value>
				</Setter>
				<Setter Property="Panel.Background" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFF5F4EA</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="Bd">
					<Setter.Value>
						<SolidColorBrush>#FFC9C7BA</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>False</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-2,-1</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-2,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-2,-2,-1,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Selector.IsSelected">
						<Condition.Value>
							<s:Boolean>True</s:Boolean>
						</Condition.Value>
					</Condition>
					<Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
				</MultiTrigger.Conditions>
				<Setter Property="FrameworkElement.Margin">
					<Setter.Value>
						<Thickness>-1,-2,-2,-2</Thickness>
					</Setter.Value>
				</Setter>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="RadioButtonTemplate" TargetType="RadioButton" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna">
		<BulletDecorator Background="#00FFFFFF">
			<ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
			<BulletDecorator.Bullet>
				<mwt:BulletChrome Height="30" Width="30" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" IsRound="True" />
			</BulletDecorator.Bullet>
		</BulletDecorator>
		<ControlTemplate.Triggers>
			<Trigger Property="ContentControl.HasContent">
				<Setter Property="FrameworkElement.FocusVisualStyle">
					<Setter.Value>
						<Style TargetType="IFrameworkInputElement">
							<Style.Resources>
								<ResourceDictionary />
							</Style.Resources>
							<Setter Property="Control.Template">
								<Setter.Value>
									<ControlTemplate>
										<Rectangle Stroke="#FF000000" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Setter.Value>
				</Setter>
				<Setter Property="Control.Padding">
					<Setter.Value>
						<Thickness>2,0,0,0</Thickness>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="TextElement.Foreground">
					<Setter.Value>
						<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>False</s:Boolean>
				</Trigger.Value>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

</ResourceDictionary>